class Solution {
    public boolean checkInclusion(String s1, String s2) {
        int len1 = s1.length();
        int len2 = s2.length();
        if(len1 > len2) return false;
        int[] keeper = new int[26];
        int j = 0;
        for(char c : s1.toCharArray()) keeper[c - 'a']++;
        for(; j < len1; j++) keeper[s2.charAt(j) - 'a']--;
        if(checkIfPermutation(keeper)) return true;
        for(int i = 0; j < s2.length(); i++, j++) {
            keeper[s2.charAt(i) - 'a']++;
            keeper[s2.charAt(j) - 'a']--;
            if(checkIfPermutation(keeper)) return true;
        }
        return false;
    }

    public boolean checkIfPermutation(int[] arr) {
        for(int k = 0; k < 26; k++) if(arr[k] > 0) return false;
        return true;
    }
}
